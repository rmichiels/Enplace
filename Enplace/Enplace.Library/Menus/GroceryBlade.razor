<article class="grocery-blade interactable @_class" @onclick=@(()=> Callback(!ActiveState))>
    <InputCheckbox class="xb-category" style="width: 1.2rem; accent-color:var(--color-category-underline);border-color:var(--color-category-underline);" @bind-Value:get="ActiveState" @bind-Value:set=Callback />
    <label class="ingredient interactable">@Item.Name</label>
    <label class="interactable">@Item.Quantity.ToString("G29")</label>
    @if (!Item.Measurement.Contains("Unit", StringComparison.CurrentCultureIgnoreCase))
    {
        <label class="interactable">@Item.Measurement</label>
    }
</article>

@code {
    [Parameter]
    public GroceryListItem Item { get; set; }
    [Parameter]
    public EventCallback<GroceryListItem> ItemChanged { get; set; }

    private string _class;
    [Parameter]
    public bool ActiveState { get; set; }
    [Parameter]
    public EventCallback<bool> ActiveStateChanged { get; set; }

    protected void Callback(bool flag)
    {
        if (flag)
        {
            _class = "active";
        }
        else
        {
            _class = string.Empty;
        }
        StateHasChanged();
        ActiveStateChanged.InvokeAsync(flag);
    }
}
