
<footer class="toaster">
    @foreach (Notification n in _notifications)
    {
        <article class="toaster-notification @n.Type">
            <span>
                @n.Message
            </span>
            <button @onclick="() => CloseNotification(n)">
            </button>
        </article>
    }
</footer>

@code {
    [Inject]
    public AsyncEventManager<Notification> NotificationManager { get; set; }

    private List<Notification> _notifications = [];

    protected override async Task OnInitializedAsync()
    {
        NotificationManager.OnEventTriggered += ReceiveNotificiation;
    }

    private async Task ReceiveNotificiation(Notification notification)
    {
        _notifications.Add(notification);
        StateHasChanged();
        _ = Task.Run(() => RemoveNotificaiton(notification));
    }

    private Task RemoveNotificaiton(Notification notification)
    {
        Thread.Sleep(10000);
        _notifications.Remove(notification);
        StateHasChanged();
        return Task.CompletedTask;
    }

    private Task CloseNotification(Notification notification)
    {
        _notifications.Remove(notification);
        StateHasChanged();
        return Task.CompletedTask;
    }
}
