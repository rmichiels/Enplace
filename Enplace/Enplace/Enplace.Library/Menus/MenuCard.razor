@using Blazored.Modal
@using Enplace.Service.Services.Managers
@inherits BaseTile<MenuDTO>

<article class="menu-card glass-s @State @Class" @onclick="() => OnSelect()">
    @switch (State)
    {
        case ComponentState.Create:
            <button class="btn-icon icon-med f-1" @onclick="ShowMenuEditor">
                <Enplace.Library.Icons.Add />
            </button>
            break;
        case ComponentState.Details:
            <span class="subtitle">@Item?.Name</span>
            <button class="btn-icon" @onclick="() => DeleteMenu()">
                <Delete />
            </button>
            break;
    }
</article>
@code {
    public async Task DeleteMenu()
    {
        if (Item is not null)
        {
            await API.Delete(Item.Id);
            ItemEvents.TriggerEvent(Item);
            EventManager.TriggerOnSubmit();
        }
    }

    protected Task ShowMenuEditor()
    {
        Console.WriteLine("Show Menu Editor Modal...");
        var opt = new ModalOptions() { Size = ModalSize.Medium };
        var param = new ModalParameters().Add(nameof(MenuEditor.State), ComponentState.Create);
        ModalService.Show<MenuEditor>("Create new menu", param, opt);
        return Task.CompletedTask;
    }

    protected async Task OnSelect()
    {
        OnItemSelected.InvokeAsync(Item);
    }
}
