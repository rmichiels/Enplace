@using Enplace.Service.Services.Managers
<article class="menu-card @State @Class" @onclick="() => OnMenuSelected.InvokeAsync(Menu)">
    @switch (State)
    {
        case ComponentState.Create:
            <button class="btn-icon icon-large">
                <Enplace.Library.Icons.Add />
            </button>
            break;
        case ComponentState.Details:
            <span class="subtitle">@Menu?.Name</span>
            <button class="btn-icon" @onclick="() => DeleteMenu()">
                <Delete />
            </button>
            break;
    }
</article>
@code {
    [Inject]
    public MenuAPI API { get; set; }

    [Parameter]
    public MenuDTO Menu { get; set; } = new();
    [Parameter]
    public EventCallback<MenuDTO> MenuChanged { get; set; }

    [Parameter]
    public ComponentState State { get; set; } = ComponentState.Details;

    [Parameter]
    public EventCallback<MenuDTO> OnMenuSelected { get; set; }

    [Parameter]
    public string Class { get; set; } = string.Empty;

    public async Task DeleteMenu()
    {
        await API.Delete(Menu.Id);
        EventManager.MenuCreated.TriggerEvent(Menu);
    }
}
