@page "/groceries/{Id:int}"
@using Enplace.Library.Menus
@using Enplace.Library.Models
@using Enplace.Service.Services.Managers
@attribute [Authorize]
@implements IDisposable

<div class="menu-groceries">
    <div class="category-wrapper">
        @foreach (var kvp in _groceriesPerCategory)
        {
            <GroceryCategory Items="@kvp.Value" Title="@kvp.Key" />
        }
    </div>
</div>

@code {
    [Inject]
    public required MenuAPI API { get; set; }
    [Inject]
    public required ILocalStorageService StorageService { get; set; }
    [Inject]
    public required AsyncEventManager<MenuDTO> MenuEvents { get; set; }

    [Parameter]
    public int Id { get; set; }

    private Dictionary<string, List<GroceryListItem>> _groceriesPerCategory = [];

    protected async override Task OnInitializedAsync()
    {
        MenuEvents.OnEventTriggered += SetGroceries;
        EventManager.TopicSelected.TriggerEvent(Topic.Menus);
        if (_groceriesPerCategory?.Count == 0 || _groceriesPerCategory is null)
        {

            _groceriesPerCategory = await StorageService.GetCacheFor<Dictionary<string, List<GroceryListItem>>>(Id, "groceries") ?? [];
            if (_groceriesPerCategory?.Count == 0 || _groceriesPerCategory is null)
            {
                _groceriesPerCategory = await API.GetGroceriesFor(Id) ?? [];
            }
        }
    }

    public async Task SetGroceries(MenuDTO? menu)
    {
        if (menu?.Id is not null)
        {
            _groceriesPerCategory = await StorageService.GetCacheFor<Dictionary<string, List<GroceryListItem>>>(menu.Id, "groceries") ?? [];
            if (_groceriesPerCategory?.Count == 0 || _groceriesPerCategory is null)
            {
                _groceriesPerCategory = await API.GetGroceriesFor(menu.Id) ?? [];
            }
            StateHasChanged();
        }
    }

    public void Dispose()
    {
        MenuEvents.OnEventTriggered -= SetGroceries;
    }
}