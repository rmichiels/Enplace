@page "/login"
@using Blazored.LocalStorage

<div class="account-login">
    <EditForm Model="_model">
        <InputText @bind-Value="_model.Email" DisplayName="Email" />
        <InputText @bind-Value="_model.Credentials" DisplayName="Password" />
        <button class="btn btn-primary" @onclick="() => AuthorizeUser()">
            Log In
        </button>
        <button class="btn btn-secondary" @onclick="() => RegisterUser()">
            Create New Account
        </button>
    </EditForm>
</div>


@code {
    [Inject]
    public AuthService Auth { get; set; }

    [Inject]
    public NavigationManager NavigationManager { get; set; }

    [Inject]
    public ILocalStorageService Storage { get; set; }

    private AuthRequest _model = new();

    public async void AuthorizeUser()
    {
        var response = await Auth.AuthenticateUser(_model);
        if (response is not null)
        {
            var dto = await Auth.AuthenticateAPI(response.Token);
            Console.WriteLine(dto.Name);
            Console.WriteLine(dto.Id);
            EnplaceContext.User = dto;
            HandleToken(response.Token);
        }
        else
        {
            // Notify User
        }
    }

    public async void RegisterUser()
    {
        var response = await Auth.RegisterUser(_model);
        if (response is not null)
        {
            EnplaceContext.User = await Auth.RegisterAPI(response.Token);
            HandleToken(response.Token);
        }
        else
        {
            // Notify User
        }
    }

    private void HandleToken(string token)
    {
        if (Auth.IsTokenValid(token))
        {
            EnplaceContext.Token = token;
            Storage.SetItemAsStringAsync("skid.enplace", token);


            StateHasChanged();
            NavigationManager.NavigateTo("/");
        }
        else
        {
            // Notify user
        }
    }
}
