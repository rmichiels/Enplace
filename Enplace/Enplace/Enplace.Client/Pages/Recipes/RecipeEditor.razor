@page "/recipes/byid/{Id:int}"

@switch (_currentState)
{
    case ComponentState.Loading:
        <div class="recipe-editor-loading">
        </div>
        break;
    case ComponentState.Edit:

        <div class="recipe-editor-edit card">
            <div class="card-header">
            </div>
            <div class="card-body">
                <table>
                    @foreach (IngredientDTO recipeIngredient in Recipe.Ingredients)
                    {
                        <tr>
                            <td>
                                @recipeIngredient.Name
                            </td>
                            <td>
                                @recipeIngredient.Category.Name
                            </td>
                            <td>
                                @recipeIngredient.Quantity
                            </td>
                            <td>
                                @recipeIngredient.Measurement.Name
                            </td>
                        </tr>
                    }
                </table>
            </div>
        </div>
        break;
}


@code {
    [Inject]
    public ApiService<RecipeDTO> Service { get; set; }
    [Parameter]
    public int Id { get; set; }

    [Parameter]
    public RecipeDTO? Recipe
    {
        get => _recipe;
        set
        {
            if (value is not null)
            {
                _recipe = value;
                _currentState = _targetState;
                StateHasChanged();
            }
        }
    }
    private RecipeDTO? _recipe;
    [Parameter]
    public EventCallback<RecipeDTO?> RecipeChanged { get; set; }

    [Parameter]
    public ComponentState State
    {
        get => _currentState;
        set
        {
            switch (value)
            {
                case ComponentState.Create:
                    Recipe = new();
                    _targetState = value;
                    _currentState = value;
                    StateHasChanged();
                    break;
                default:
                    _targetState = value;
                    break;
            }
        }
    }
    private ComponentState _currentState = ComponentState.Loading;
    private ComponentState _targetState = ComponentState.Edit;

    protected override async Task OnInitializedAsync()
    {
        if (Recipe is null)
        {
            Recipe = await Service.Get(Id);
            if (Recipe is null)
            {
                _currentState = ComponentState.Error;
            }
            else
            {
                _currentState = _targetState;
            }
        }
    }
}
